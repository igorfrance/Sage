// <auto-generated>Marked as auto-generated so StyleCop will ignore BDD style tests</auto-generated>

/**
 * Open Source Initiative OSI - The MIT License (MIT):Licensing
 * [OSI Approved License]
 * The MIT License (MIT)
 *
 * Copyright (c) 2011 Igor France
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local
namespace Sage.Test.ResourceManagement
{
	using System;
	using System.Xml;

	using Machine.Specifications;
	using Sage.Configuration;

	[Subject(typeof(LocaleInfo)), Tags(Categories.ResourceManagement)]
	public class When_requesting_info_on_english_locale
	{
		private static LocaleInfo localeInfo;
		private static XmlDocument xmlDocument = new XmlDocument();

		private Establish ctx = () =>
			{
				xmlDocument.LoadXml(@"
					<globalization>
						<locale name=""uk"" dictionaryNames=""en-UK,en"" resourceNames=""en-UK,en,default"">
							<format culture=""en-uk"" shortDate=""d"" longDate=""D""/>
						</locale>
					</globalization>");

				localeInfo = new LocaleInfo((XmlElement) xmlDocument.SelectSingleNode("/globalization/locale"));
			};

		private It Should_have_the_correct_name = () => 
			localeInfo.Name.ShouldEqual("uk");

		private It Should_have_the_correct_resource_name = () => 
			localeInfo.ResourceNames[0].ShouldEqual("en-UK");

		private It Should_have_the_same_resource_name_as_the_dictionary_name = () => 
			localeInfo.ResourceNames[0].ShouldEqual(localeInfo.DictionaryNames[0]);

		private It Should_have_the_deffault_fallback_resource_name = () => 
			localeInfo.ResourceNames[2].ShouldEqual("default");
	}

	[Subject(typeof(LocaleInfo)), Tags(Categories.ResourceManagement)]
	public class When_requesting_an_empty_locale
	{
		private static LocaleInfo localeInfo;
		private static Exception exception;

		private Because of = () => exception = Catch.Exception(() => localeInfo = new LocaleInfo(null));

		private It Should_Fail = () => exception.ShouldBeOfType<ArgumentNullException>();
	}
}